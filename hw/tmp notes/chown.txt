chown:
	chown [OPTION]... [OWNER][:[GROUP]] FILE...
	If only  an  owner  (a user  name or numeric user ID) is given, that user is made the owner of each
given file, and the files' group is not changed.  If the owner  is followed  by  a  colon  and a 
group name (or numeric group ID), with no spaces between them, the group ownership of the  files  is
changed  as well.  If a colon but no group name follows the user name, that user is made the owner 
of the files and the group of the files  is  changed  to that  user's  login  group. If the colon 
and group are given, but the owner is omitted, only the group of the files is changed; in this case,
chown  performs  the same function as chgrp.  If only a colon is given, or if the entire operand is 
empty, neither the owner nor the  group  is changed.

	change owner of a file
		chown username file1.txt

	change group of a file
		chown :groupName file1

	change both, recursively for a directory
		chown -R dmurphy:tomcat7 somedirectory
	

Options
	-c, --changes
		like verbose but report only when a change is made
	--dereference
		affect the referent of each symbolic link (this is the default), rather than the symbolic link itself
	-h, --no-dereference
		affect each symbolic link instead of any referenced file (useful only on systems that can change the ownership of a symlink)
	--from=CURRENT_OWNER:CURRENT_GROUP
		change the owner and/or group of each file only if its current owner and/or group match those specified here. Either may be omitted, in which case a match is not required for the omitted attribute.
	--no-preserve-root
		do not treat '/' specially (the default)
	--preserve-root
		fail to operate recursively on '/'
	-f, --silent, --quiet
		suppress most error messages
	--reference=RFILE
		use RFILE's owner and group rather than specifying OWNER:GROUP values
	-R, --recursive
		operate on files and directories recursively
	-v, --verbose
		output a diagnostic for every file processed
	